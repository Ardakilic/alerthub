name: Test Suite

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.19.0]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_OPTIONS: --experimental-vm-modules

    - name: Check coverage threshold
      run: |
        # Extract coverage percentage from coverage output
        COVERAGE=$(npm run test:coverage --silent 2>&1 | grep "All files" | grep -oE '[0-9]+(\.[0-9]+)?' | head -1)
        echo "Coverage: $COVERAGE%"

        # Check if coverage is at least 80% (convert to integer for comparison)
        if [ -n "$COVERAGE" ]; then
          COVERAGE_INT=$(echo "$COVERAGE" | cut -d'.' -f1)
          if [ "$COVERAGE_INT" -ge 80 ]; then
            echo "✅ Coverage meets requirement (≥80%): $COVERAGE%"
          else
            echo "❌ Coverage below requirement (<80%): $COVERAGE%"
            exit 1
          fi
        else
          echo "❌ Could not extract coverage percentage"
          exit 1
        fi

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Biome linter
      run: npx @biomejs/biome check src/
